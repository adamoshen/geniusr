[{"path":[]},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://ewenme.github.io/geniusr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"auth","dir":"Articles","previous_headings":"","what":"Authentication","title":"geniusr: the basics","text":"geniusr data retrieval typically done making authenticated requests Genius API. necessitates common steps: Create Genius API client via API Client management page Generate client access token API clients page Pass access token GENIUS_API_TOKEN environment variable explicitly calling genius_token() function, prompted functions set GENIUS_API_TOKEN environment variable, active rest session automatically called (via genius_token()) using geniusr functions request data.","code":"library(geniusr)"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"resources","dir":"Articles","previous_headings":"","what":"Resources","title":"geniusr: the basics","text":"first family data retrieval functions help accessing data various types Genius Resources, explored turn .","code":""},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"songs","dir":"Articles","previous_headings":"Resources","what":"Songs","title":"geniusr: the basics","text":"Functions requesting data songs hosted Genius take form get_song_xxx(). example, get_song() returns details song , well user annotations attached , genius_song object. details track Sing , ’m Dying Thirst Kendrick Lamar:","code":"get_song(song_id = 90479) #> Sing About Me, I'm Dying of Thirst by Kendrick Lamar <api.genius.com/songs/90479> #> List of 42 #>  $ annotation_count               : int 73 #>  $ api_path                       : chr \"/songs/90479\" #>  $ apple_music_id                 : chr \"624345722\" #>  $ apple_music_player_url         : chr \"https://genius.com/songs/90479/apple_music_player\" #>  $ artist_names                   : chr \"Kendrick Lamar\" #>  $ description                    :List of 1 #>  $ embed_content                  : chr \"<div id='rg_embed_link_90479' class='rg_embed_link' data-song-id='90479'>Read <a href='https://genius.com/Kendr\"| __truncated__ #>  $ featured_video                 : logi FALSE #>  $ full_title                     : chr \"Sing About Me, I'm Dying of Thirst by Kendrick Lamar\" #>  $ header_image_thumbnail_url     : chr \"https://images.genius.com/c129d5d114d2cd2303d72e073746a5db.300x300x1.jpg\" #>  $ header_image_url               : chr \"https://images.genius.com/c129d5d114d2cd2303d72e073746a5db.1000x1000x1.jpg\" #>  $ id                             : int 90479 #>  $ lyrics_owner_id                : int 121065 #>  $ lyrics_placeholder_reason      : NULL #>  $ lyrics_state                   : chr \"complete\" #>  $ path                           : chr \"/Kendrick-lamar-sing-about-me-im-dying-of-thirst-lyrics\" #>  $ pyongs_count                   : int 240 #>  $ recording_location             : chr \"TDE Red Room, Carson, CA\" #>  $ relationships_index_url        : chr \"https://genius.com/Kendrick-lamar-sing-about-me-im-dying-of-thirst-sample\" #>  $ release_date                   : chr \"2012-10-22\" #>  $ release_date_for_display       : chr \"October 22, 2012\" #>  $ song_art_image_thumbnail_url   : chr \"https://images.genius.com/c129d5d114d2cd2303d72e073746a5db.300x300x1.jpg\" #>  $ song_art_image_url             : chr \"https://images.genius.com/c129d5d114d2cd2303d72e073746a5db.1000x1000x1.jpg\" #>  $ stats                          :List of 8 #>  $ title                          : chr \"Sing About Me, I’m Dying of Thirst\" #>  $ title_with_featured            : chr \"Sing About Me, I'm Dying of Thirst\" #>  $ url                            : chr \"https://genius.com/Kendrick-lamar-sing-about-me-im-dying-of-thirst-lyrics\" #>  $ current_user_metadata          :List of 5 #>  $ album                          :List of 7 #>  $ custom_performances            :List of 10 #>  $ description_annotation         :List of 15 #>  $ featured_artists               : list() #>  $ lyrics_marked_complete_by      : NULL #>  $ lyrics_marked_staff_approved_by: NULL #>  $ media                          :List of 3 #>  $ primary_artist                 :List of 9 #>  $ producer_artists               :List of 3 #>  $ song_relationships             :List of 10 #>  $ verified_annotations_by        :List of 1 #>  $ verified_contributors          :List of 1 #>  $ verified_lyrics_by             : list() #>  $ writer_artists                 :List of 7"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"artists","dir":"Articles","previous_headings":"Resources","what":"Artists","title":"geniusr: the basics","text":"Functions requesting data artist (.e. creator one songs hosted Genius) take form get_artist_xxx(). example, get_artist() returns details artist genius_artist object info artist Kendrick Lamar:","code":"get_artist(artist_id = 1421) #> Kendrick Lamar <api.genius.com/artists/1421> #> List of 19 #>  $ alternate_names       :List of 6 #>  $ api_path              : chr \"/artists/1421\" #>  $ description           :List of 1 #>  $ facebook_name         : chr \"kendricklamar\" #>  $ followers_count       : int 27102 #>  $ header_image_url      : chr \"https://images.genius.com/3514a6d32afe88c48f22263e303f55d0.1000x601x1.jpg\" #>  $ id                    : int 1421 #>  $ image_url             : chr \"https://images.genius.com/d6d96651b423fa5a83c38ee2a4c6c939.1000x1000x1.jpg\" #>  $ instagram_name        : chr \"kendricklamar\" #>  $ is_meme_verified      : logi TRUE #>  $ is_verified           : logi TRUE #>  $ name                  : chr \"Kendrick Lamar\" #>  $ translation_artist    : logi FALSE #>  $ twitter_name          : chr \"kendricklamar\" #>  $ url                   : chr \"https://genius.com/artists/Kendrick-lamar\" #>  $ current_user_metadata :List of 3 #>  $ iq                    : int 52371 #>  $ description_annotation:List of 15 #>  $ user                  :List of 11"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"albums","dir":"Articles","previous_headings":"Resources","what":"Albums","title":"geniusr: the basics","text":"Functions requesting data album take form get_album_xxx(). example, get_album() returns details artist genius_album object. info album Good Kid, M...D City Kendrick Lamar:","code":"get_album(album_id = 491200) #> good kid, m.A.A.d city (Deluxe Version) by Kendrick Lamar <api.genius.com/albums/491200> #> List of 20 #>  $ api_path               : chr \"/albums/491200\" #>  $ comment_count          : int 11 #>  $ cover_art_url          : chr \"https://images.genius.com/1efc5de2af228d2e49d91bd0dac4dc49.1000x1000x1.jpg\" #>  $ custom_header_image_url: NULL #>  $ full_title             : chr \"good kid, m.A.A.d city (Deluxe Version) by Kendrick Lamar\" #>  $ header_image_url       : chr \"https://images.genius.com/1efc5de2af228d2e49d91bd0dac4dc49.1000x1000x1.jpg\" #>  $ id                     : int 491200 #>  $ lock_state             : chr \"super_locked\" #>  $ name                   : chr \"good kid, m.A.A.d city (Deluxe Version)\" #>  $ pyongs_count           : int 31 #>  $ release_date           : chr \"2012-10-22\" #>  $ release_date_components:List of 3 #>  $ url                    : chr \"https://genius.com/albums/Kendrick-lamar/Good-kid-m-a-a-d-city-deluxe-version\" #>  $ current_user_metadata  :List of 3 #>  $ song_pageviews         : int 45267586 #>  $ artist                 :List of 9 #>  $ cover_arts             :List of 1 #>  $ description_annotation :List of 15 #>  $ performance_groups     : list() #>  $ song_performances      :List of 27"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"search","dir":"Articles","previous_headings":"Resources","what":"Search","title":"geniusr: the basics","text":"Functions searching content hosted Genius take form search_xxx(). example, search_genius() returns documents matching search term(s) genius_resource object. can look documents match search term “Compton”.","code":"search_genius(search_term = \"Compton\") #> <Genius api.genius.com/search?q=Compton> #> List of 9 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22 #>  $ :List of 22"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"simplify","dir":"Articles","previous_headings":"Resources","what":"Simplify","title":"geniusr: the basics","text":"functions introduced return fairly complex list objects immediately ready many analytical workflows. get_artist|album|song() functions sister functions prepare tibble (data frame) . ’s get_song() action… …’s get_song_df(), retrieving data song: get_album|artist|song_df() output somewhat simplified version get_album|artist|song() counterpart, make sure check original function objects need detail. Furthermore, tidy_xxx() functions available help “un-nest” data holed nested lists within genius_song genius_album objects. example, tidy_song_producers() pulls producer credits genius_song() object tidy tibble:","code":"get_song(song_id = 3889) #> 13th Floor/Growing Old by OutKast <api.genius.com/songs/3889> #> List of 42 #>  $ annotation_count               : int 49 #>  $ api_path                       : chr \"/songs/3889\" #>  $ apple_music_id                 : chr \"263570790\" #>  $ apple_music_player_url         : chr \"https://genius.com/songs/3889/apple_music_player\" #>  $ artist_names                   : chr \"OutKast\" #>  $ description                    :List of 1 #>  $ embed_content                  : chr \"<div id='rg_embed_link_3889' class='rg_embed_link' data-song-id='3889'>Read <a href='https://genius.com/Outkast\"| __truncated__ #>  $ featured_video                 : logi FALSE #>  $ full_title                     : chr \"13th Floor/Growing Old by OutKast\" #>  $ header_image_thumbnail_url     : chr \"https://images.genius.com/d293509eb8c5aea6fb76de18a66c6b24.300x300x1.jpg\" #>  $ header_image_url               : chr \"https://images.genius.com/d293509eb8c5aea6fb76de18a66c6b24.999x999x1.jpg\" #>  $ id                             : int 3889 #>  $ lyrics_owner_id                : int 4479 #>  $ lyrics_placeholder_reason      : NULL #>  $ lyrics_state                   : chr \"complete\" #>  $ path                           : chr \"/Outkast-13th-floor-growing-old-lyrics\" #>  $ pyongs_count                   : int 9 #>  $ recording_location             : chr \"Studio LaCoCo, Doppler Studios, Bosstown & Patchwerk Recording Studios (Atlanta)\" #>  $ relationships_index_url        : chr \"https://genius.com/Outkast-13th-floor-growing-old-sample\" #>  $ release_date                   : chr \"1996-08-27\" #>  $ release_date_for_display       : chr \"August 27, 1996\" #>  $ song_art_image_thumbnail_url   : chr \"https://images.genius.com/d293509eb8c5aea6fb76de18a66c6b24.300x300x1.jpg\" #>  $ song_art_image_url             : chr \"https://images.genius.com/d293509eb8c5aea6fb76de18a66c6b24.999x999x1.jpg\" #>  $ stats                          :List of 8 #>  $ title                          : chr \"13th Floor/Growing Old\" #>  $ title_with_featured            : chr \"13th Floor/Growing Old\" #>  $ url                            : chr \"https://genius.com/Outkast-13th-floor-growing-old-lyrics\" #>  $ current_user_metadata          :List of 5 #>  $ album                          :List of 7 #>  $ custom_performances            :List of 15 #>  $ description_annotation         :List of 15 #>  $ featured_artists               : list() #>  $ lyrics_marked_complete_by      : NULL #>  $ lyrics_marked_staff_approved_by: NULL #>  $ media                          :List of 1 #>  $ primary_artist                 :List of 8 #>  $ producer_artists               :List of 1 #>  $ song_relationships             :List of 10 #>  $ verified_annotations_by        : list() #>  $ verified_contributors          : list() #>  $ verified_lyrics_by             : list() #>  $ writer_artists                 :List of 7 get_song_df(song_id = 3889) #> # A tibble: 1 × 13 #>   song_id song_name      song_…¹ song_…² song_…³ song_…⁴ song_…⁵ artis…⁶ artis…⁷ #>     <int> <chr>          <chr>   <chr>   <chr>     <int>   <int>   <int> <chr>   #> 1    3889 13th Floor/Gr… https:… https:… 1996-0…  103888      49     105 OutKast #> # … with 4 more variables: artist_url <chr>, album_id <int>, album_name <chr>, #> #   album_url <chr>, and abbreviated variable names ¹​song_lyrics_url, #> #   ²​song_art_image_url, ³​song_release_date, ⁴​song_pageviews, #> #   ⁵​song_annotation_count, ⁶​artist_id, ⁷​artist_name song <- get_song(song_id = 89)  song #> N.Y. State of Mind by Nas <api.genius.com/songs/89> #> List of 42 #>  $ annotation_count               : int 57 #>  $ api_path                       : chr \"/songs/89\" #>  $ apple_music_id                 : chr \"856131732\" #>  $ apple_music_player_url         : chr \"https://genius.com/songs/89/apple_music_player\" #>  $ artist_names                   : chr \"Nas\" #>  $ description                    :List of 1 #>  $ embed_content                  : chr \"<div id='rg_embed_link_89' class='rg_embed_link' data-song-id='89'>Read <a href='https://genius.com/Nas-ny-stat\"| __truncated__ #>  $ featured_video                 : logi FALSE #>  $ full_title                     : chr \"N.Y. State of Mind by Nas\" #>  $ header_image_thumbnail_url     : chr \"https://images.genius.com/e6d7c852b0e01b48833efa64de26fcbe.300x300x1.jpg\" #>  $ header_image_url               : chr \"https://images.genius.com/e6d7c852b0e01b48833efa64de26fcbe.1000x1000x1.jpg\" #>  $ id                             : int 89 #>  $ lyrics_owner_id                : int 8 #>  $ lyrics_placeholder_reason      : NULL #>  $ lyrics_state                   : chr \"complete\" #>  $ path                           : chr \"/Nas-ny-state-of-mind-lyrics\" #>  $ pyongs_count                   : int 438 #>  $ recording_location             : chr \"D&D Studios (New York City)\" #>  $ relationships_index_url        : chr \"https://genius.com/Nas-ny-state-of-mind-sample\" #>  $ release_date                   : chr \"1994-04-19\" #>  $ release_date_for_display       : chr \"April 19, 1994\" #>  $ song_art_image_thumbnail_url   : chr \"https://images.genius.com/e6d7c852b0e01b48833efa64de26fcbe.300x300x1.jpg\" #>  $ song_art_image_url             : chr \"https://images.genius.com/e6d7c852b0e01b48833efa64de26fcbe.1000x1000x1.jpg\" #>  $ stats                          :List of 9 #>  $ title                          : chr \"N.Y. State of Mind\" #>  $ title_with_featured            : chr \"N.Y. State of Mind\" #>  $ url                            : chr \"https://genius.com/Nas-ny-state-of-mind-lyrics\" #>  $ current_user_metadata          :List of 5 #>  $ album                          :List of 7 #>  $ custom_performances            :List of 9 #>  $ description_annotation         :List of 15 #>  $ featured_artists               : list() #>  $ lyrics_marked_complete_by      : NULL #>  $ lyrics_marked_staff_approved_by: NULL #>  $ media                          :List of 2 #>  $ primary_artist                 :List of 9 #>  $ producer_artists               :List of 1 #>  $ song_relationships             :List of 10 #>  $ verified_annotations_by        :List of 1 #>  $ verified_contributors          :List of 1 #>  $ verified_lyrics_by             : list() #>  $ writer_artists                 :List of 2  tidy_song_producers(song) #> # A tibble: 1 × 10 #>   song_id producer_art…¹ produ…² produ…³ produ…⁴ produ…⁵ produ…⁶ produ…⁷ produ…⁸ #>     <int> <chr>          <chr>   <chr>     <int> <chr>   <lgl>   <lgl>   <chr>   #> 1      89 DJ Premier     /artis… https:…    2260 https:… TRUE    TRUE    https:… #> # … with 1 more variable: producer_artists_iq <int>, and abbreviated variable #> #   names ¹​producer_artists_name, ²​producer_artists_api_path, #> #   ³​producer_artists_header_image_url, ⁴​producer_artists_id, #> #   ⁵​producer_artists_image_url, ⁶​producer_artists_is_meme_verified, #> #   ⁷​producer_artists_is_verified, ⁸​producer_artists_url"},{"path":"https://ewenme.github.io/geniusr/articles/geniusr.html","id":"lyrics","dir":"Articles","previous_headings":"","what":"Lyrics","title":"geniusr: the basics","text":"also tools found geniusr help Genius lyrics retrieval. functions take form…guessed …get_lyrics_xxx(). example, get_lyrics_id() finds song lyrics given song id, returns data tidy tibble - line track observation (.e. row). complete look, ’s song lyrics Sing , ’m Dying Thirst:","code":"get_lyrics_id(song_id = 90479) #> # A tibble: 248 × 6 #>    line                                  secti…¹ secti…² song_…³ artis…⁴ song_id #>    <chr>                                 <chr>   <chr>   <chr>   <chr>     <dbl> #>  1 When the lights shut off and it's my… Chorus  Kendri… Sing A… Kendri…   90479 #>  2 To settle down, my main concern       Chorus  Kendri… Sing A… Kendri…   90479 #>  3 Promise that you will sing about me   Chorus  Kendri… Sing A… Kendri…   90479 #>  4 Promise that you will sing about me   Chorus  Kendri… Sing A… Kendri…   90479 #>  5 I said when the lights shut off and … Chorus  Kendri… Sing A… Kendri…   90479 #>  6 To settle down, my main concern       Chorus  Kendri… Sing A… Kendri…   90479 #>  7 Promise that you will sing about me   Chorus  Kendri… Sing A… Kendri…   90479 #>  8 Promise that you will sing about me   Chorus  Kendri… Sing A… Kendri…   90479 #>  9 I woke up this morning and figured I… Verse 1 Kendri… Sing A… Kendri…   90479 #> 10 In case I'm not here tomorrow         Verse 1 Kendri… Sing A… Kendri…   90479 #> # … with 238 more rows, and abbreviated variable names ¹​section_name, #> #   ²​section_artist, ³​song_name, ⁴​artist_name"},{"path":"https://ewenme.github.io/geniusr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ewen Henderson. Author, maintainer.","code":""},{"path":"https://ewenme.github.io/geniusr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henderson E (2022). geniusr: Tools Working 'Genius' API. https://ewenme.github.io/geniusr/, https://github.com/ewenme/geniusr.","code":"@Manual{,   title = {geniusr: Tools for Working with the 'Genius' API},   author = {Ewen Henderson},   year = {2022},   note = {https://ewenme.github.io/geniusr/, https://github.com/ewenme/geniusr}, }"},{"path":[]},{"path":"https://ewenme.github.io/geniusr/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tools for Working with the Genius API","text":"Tools working Genius (FKA Rap Genius) API. Genius Developers Site: https://genius.com/developers Genius API Docs: https://docs.genius.com/","code":""},{"path":"https://ewenme.github.io/geniusr/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Tools for Working with the Genius API","text":"Get latest stable version CRAN… …install development version Github.","code":"install.packages(\"geniusr\") remotes::install_github(\"ewenme/geniusr\")"},{"path":"https://ewenme.github.io/geniusr/index.html","id":"authenticate","dir":"","previous_headings":"","what":"Authenticate","title":"Tools for Working with the Genius API","text":"Create Genius API client Generate client access token API Clients page Set credentials System Environment variable GENIUS_API_TOKEN calling genius_token() function entering Genius Client Access Token prompted.","code":""},{"path":"https://ewenme.github.io/geniusr/index.html","id":"use","dir":"","previous_headings":"","what":"Use","title":"Tools for Working with the Genius API","text":"Start basics!","code":""},{"path":"https://ewenme.github.io/geniusr/index.html","id":"how-many-times-did-ye-say-good-morning-on-the-track-good-morning","dir":"","previous_headings":"Use","what":"How many times did ’Ye say “good morning”, on the track “Good Morning”?","title":"Tools for Working with the Genius API","text":"","code":"library(geniusr) library(dplyr) library(tidytext)  # get lyrics get_lyrics_search(artist_name = \"Kanye West\",                   song_title = \"Good Morning\") %>%    # get lyric bigrams   unnest_tokens(bigram, line, token = \"ngrams\", n = 2) %>%   # look for good morning   filter(bigram == \"good morning\") %>%    # count bigram frequency   nrow() #> [1] 18"},{"path":"https://ewenme.github.io/geniusr/index.html","id":"other","dir":"","previous_headings":"","what":"Other","title":"Tools for Working with the Genius API","text":"Get citation information geniusr R citation(package =     'geniusr') Please note geniusr project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://ewenme.github.io/geniusr/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Tools for Working with the Genius API","text":"genius package specialises lyrics retrieval Genius.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/album_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert genius_album object to a data frame — album_to_df","title":"Convert genius_album object to a data frame — album_to_df","text":"Convert genius_album object data frame","code":""},{"path":"https://ewenme.github.io/geniusr/reference/album_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert genius_album object to a data frame — album_to_df","text":"","code":"album_to_df(x)"},{"path":"https://ewenme.github.io/geniusr/reference/album_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert genius_album object to a data frame — album_to_df","text":"x genius_album object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/album_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert genius_album object to a data frame — album_to_df","text":"tibble","code":""},{"path":"https://ewenme.github.io/geniusr/reference/album_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert genius_album object to a data frame — album_to_df","text":"","code":"if (FALSE) { album <- get_album(album_id = 337082) album_to_df(album) }"},{"path":"https://ewenme.github.io/geniusr/reference/artist_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert genius_artist object to a data frame — artist_to_df","title":"Convert genius_artist object to a data frame — artist_to_df","text":"Convert genius_artist object data frame","code":""},{"path":"https://ewenme.github.io/geniusr/reference/artist_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert genius_artist object to a data frame — artist_to_df","text":"","code":"artist_to_df(x)"},{"path":"https://ewenme.github.io/geniusr/reference/artist_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert genius_artist object to a data frame — artist_to_df","text":"x genius_artist object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/artist_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert genius_artist object to a data frame — artist_to_df","text":"tibble","code":""},{"path":"https://ewenme.github.io/geniusr/reference/artist_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert genius_artist object to a data frame — artist_to_df","text":"","code":"if (FALSE) { artist <- get_artist(artist_id = 16775) artist_to_df(artist) }"},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius.html","id":null,"dir":"Reference","previous_headings":"","what":"Open the Genius homepage in your browser — browse_genius","title":"Open the Genius homepage in your browser — browse_genius","text":"Opens browser https://genius.com/.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open the Genius homepage in your browser — browse_genius","text":"","code":"browse_genius()"},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open the Genius homepage in your browser — browse_genius","text":"browser opened Genius website session interactive. URL returned character string.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open the Genius homepage in your browser — browse_genius","text":"","code":"# \\donttest{ browse_genius() # }"},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Open the Genius url of a resource in your browser — browse_genius_resource","title":"Open the Genius url of a resource in your browser — browse_genius_resource","text":"Opens browser Genius url Genius \"resource\" (.e. result successful get_album|artist|song() call).","code":""},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open the Genius url of a resource in your browser — browse_genius_resource","text":"","code":"browse_genius_resource(x)"},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open the Genius url of a resource in your browser — browse_genius_resource","text":"x genius_album, genius_artist, genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius_resource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open the Genius url of a resource in your browser — browse_genius_resource","text":"browser opened Genius resource's url session interactive. URL returned character string.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/browse_genius_resource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open the Genius url of a resource in your browser — browse_genius_resource","text":"","code":"# \\donttest{ song <- get_song(song_id = 3039923) browse_genius_resource(song) # }"},{"path":"https://ewenme.github.io/geniusr/reference/genius_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set Genius access token value — genius_token","title":"Get or set Genius access token value — genius_token","text":"API wrapper functions package rely Genius client access token residing environment variable GENIUS_API_TOKEN. easiest way accomplish set `.Renviron` file home directory.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/genius_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set Genius access token value — genius_token","text":"","code":"genius_token(force = FALSE)"},{"path":"https://ewenme.github.io/geniusr/reference/genius_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set Genius access token value — genius_token","text":"force force setting new Genius API token current environment?","code":""},{"path":"https://ewenme.github.io/geniusr/reference/genius_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set Genius access token value — genius_token","text":"atomic character vector containing Genius API token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/geniusr-package.html","id":null,"dir":"Reference","previous_headings":"","what":"geniusr: Tools for Working with the 'Genius' API — geniusr-package","title":"geniusr: Tools for Working with the 'Genius' API — geniusr-package","text":"Provides tools interact nicely 'Genius' API https://docs.genius.com/. Search hosted content, extract associated metadata retrieve lyrics ease.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/geniusr-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"geniusr: Tools for Working with the 'Genius' API — geniusr-package","text":"Maintainer: Ewen Henderson ewenhenderson@gmail.com (ORCID)","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for an album — get_album","title":"Retrieve metadata for an album — get_album","text":"Genius API lets request data specific album, given album ID. get_album() returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for an album — get_album","text":"","code":"get_album(album_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_album.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for an album — get_album","text":"album_id ID album (album_id within object returned get_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for an album — get_album","text":"genius_album object contains extracted content request, original JSON response object request path.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_album.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for an album — get_album","text":"","code":"if (FALSE) { get_album(album_id = 337082) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve meta data for an album — get_album_df","title":"Retrieve meta data for an album — get_album_df","text":"Genius API lets return data specific album, given album ID. get_album_meta returns data tidy, reduced, format.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve meta data for an album — get_album_df","text":"","code":"get_album_df(album_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve meta data for an album — get_album_df","text":"album_id ID album (album_id within object returned get_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve meta data for an album — get_album_df","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_album_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve meta data for an album — get_album_df","text":"","code":"if (FALSE) { get_album_df(album_id = 337082) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an album's tracklisting — get_album_tracklist_id","title":"Retrieve an album's tracklisting — get_album_tracklist_id","text":"Get album's tracklisting, song meta data, given album ID.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an album's tracklisting — get_album_tracklist_id","text":"","code":"get_album_tracklist_id(album_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an album's tracklisting — get_album_tracklist_id","text":"album_id ID album (album_id within object returned get_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an album's tracklisting — get_album_tracklist_id","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an album's tracklisting — get_album_tracklist_id","text":"","code":"if (FALSE) { get_album_tracklist_id(album_id = 337082) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve an album's tracklisting — get_album_tracklist_search","title":"Retrieve an album's tracklisting — get_album_tracklist_search","text":"Attempt get album's tracklisting, given artist album name.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve an album's tracklisting — get_album_tracklist_search","text":"","code":"get_album_tracklist_search(artist_name, album_name)"},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve an album's tracklisting — get_album_tracklist_search","text":"artist_name Name artist album_name Name album","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve an album's tracklisting — get_album_tracklist_search","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_album_tracklist_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve an album's tracklisting — get_album_tracklist_search","text":"","code":"if (FALSE) { get_album_tracklist_search(artist_name = \"Kendrick Lamar\", album_name = \"DAMN.\") }"},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for an annotation — get_annotation","title":"Retrieve metadata for an annotation — get_annotation","text":"Genius API lets return data specific annotation, given annotation ID. get_annotation returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for an annotation — get_annotation","text":"","code":"get_annotation(annotation_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for an annotation — get_annotation","text":"annotation_id ID annotation access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for an annotation — get_annotation","text":"genius_annotation object contains extracted content request, original JSON response object request path.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve metadata for an annotation — get_annotation","text":"Genius annotation piece content part document. document may song (hosted Genius) web page (hosted anywhere). part document annotation attached called referent.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for an annotation — get_annotation","text":"","code":"if (FALSE) { get_annotation(annotation_id = 16511101) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for an artist — get_artist","title":"Retrieve metadata for an artist — get_artist","text":"Genius API lets return data specific artist, given artist ID. get_artist returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for an artist — get_artist","text":"","code":"get_artist(artist_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for an artist — get_artist","text":"artist_id ID artist (artist_id within object returned search_artist) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for an artist — get_artist","text":"genius_artist object contains extracted content request, original JSON response object request path.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_artist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for an artist — get_artist","text":"","code":"if (FALSE) { get_artist(artist_id = 16775) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for an artist — get_artist_df","title":"Retrieve metadata for an artist — get_artist_df","text":"Genius API lets search meta data artist, given artist ID. get_artist_df returns data tidy, reduced, format.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for an artist — get_artist_df","text":"","code":"get_artist_df(artist_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for an artist — get_artist_df","text":"artist_id ID artist (artist_id within object returned search_artist) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for an artist — get_artist_df","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for an artist — get_artist_df","text":"","code":"if (FALSE) { get_artist_df(artist_id = 16751) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for all of an artist's songs — get_artist_songs","title":"Retrieve metadata for all of an artist's songs — get_artist_songs","text":"Genius API lets search song metadata artist, given artist ID. get_artist_songs returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for all of an artist's songs — get_artist_songs","text":"","code":"get_artist_songs(   artist_id,   sort = c(\"title\", \"popularity\"),   include_features = FALSE,   access_token = genius_token() )"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for all of an artist's songs — get_artist_songs","text":"artist_id ID artist (artist_id within object returned search_artist) sort method order results; \"title\" (default) \"popularity\" include_features Whether return results artist primary artist (logical, defaults FALSE) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for all of an artist's songs — get_artist_songs","text":"genius_resource object contains extracted content request, original JSON response object request path.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for all of an artist's songs — get_artist_songs","text":"","code":"if (FALSE) { get_artist_songs(artist_id = 1421) get_artist_songs(artist_id = 1421, sort = \"popularity\") get_artist_songs(artist_id = 1421, include_features = TRUE) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","title":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","text":"Genius API lets search song metadata artist, given artist ID. get_artist_songs_df returns data tidy, reduced, format.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","text":"","code":"get_artist_songs_df(   artist_id,   sort = c(\"title\", \"popularity\"),   include_features = FALSE,   access_token = genius_token() )"},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","text":"artist_id ID artist (artist_id within object returned search_artist) sort method order results; \"title\" (default) \"popularity\" include_features Whether return results artist primary artist (logical, defaults FALSE) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_artist_songs_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for all of an artist's songs — get_artist_songs_df","text":"","code":"if (FALSE) { get_artist_songs_df(artist_id = 1421) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve lyrics associated with a Genius song ID — get_lyrics_id","title":"Retrieve lyrics associated with a Genius song ID — get_lyrics_id","text":"Get lyrics Genius' lyric pages using associated song ID.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve lyrics associated with a Genius song ID — get_lyrics_id","text":"","code":"get_lyrics_id(song_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve lyrics associated with a Genius song ID — get_lyrics_id","text":"song_id ID song (song_id within object returned search_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve lyrics associated with a Genius song ID — get_lyrics_id","text":"","code":"if (FALSE) { get_lyrics_id(song_id = 3214267) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve lyrics associated with a Genius song — get_lyrics_search","title":"Retrieve lyrics associated with a Genius song — get_lyrics_search","text":"Attempt get lyrics Genius' lyric pages using associated artist name song title.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve lyrics associated with a Genius song — get_lyrics_search","text":"","code":"get_lyrics_search(artist_name, song_title)"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve lyrics associated with a Genius song — get_lyrics_search","text":"artist_name Name artist song_title Title song","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve lyrics associated with a Genius song — get_lyrics_search","text":"","code":"if (FALSE) { get_lyrics_search(artist_name = \"Anderson .Paak\", song_title = \"Come Home\") }"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve lyrics associated with a Genius lyrics page URL — get_lyrics_url","title":"Retrieve lyrics associated with a Genius lyrics page URL — get_lyrics_url","text":"Scrape lyrics Genius' lyric page using associated URL. Best used scrape_tracklist, song IDs returned - otherwise, scrape_lyrics_id recommended.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve lyrics associated with a Genius lyrics page URL — get_lyrics_url","text":"","code":"get_lyrics_url(song_lyrics_url)"},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve lyrics associated with a Genius lyrics page URL — get_lyrics_url","text":"song_lyrics_url song lyrics url (like song_lyrics_url returned get_song_meta)","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_lyrics_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve lyrics associated with a Genius lyrics page URL — get_lyrics_url","text":"","code":"if (FALSE) { get_lyrics_url(song_lyrics_url = \"https://genius.com/Kendrick-lamar-dna-lyrics\") }"},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for a referent — get_referent","title":"Retrieve metadata for a referent — get_referent","text":"Genius API lets return data specific referent. get_referent returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for a referent — get_referent","text":"","code":"get_referent(   created_by_id,   song_id,   web_page_id,   access_token = genius_token() )"},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for a referent — get_referent","text":"created_by_id ID user get referents song_id ID song get referents (pass one song_id web_page_id) web_page_id ID web page get referents (pass one song_id web_page_id) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for a referent — get_referent","text":"genius_referent object contains extracted content request, original JSON response object request path.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve metadata for a referent — get_referent","text":"Referents sections piece content annotations attached. referent associated web page song may one annotations. Referents can searched document attached user created .","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_referent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for a referent — get_referent","text":"","code":"if (FALSE) { get_referent(song_id = 3039923) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_song.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for a song — get_song","title":"Retrieve metadata for a song — get_song","text":"Genius API lets return data specific song, given song ID. get_song returns data full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_song.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for a song — get_song","text":"","code":"get_song(song_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_song.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for a song — get_song","text":"song_id ID song (song_id within object returned search_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_song.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for a song — get_song","text":"genius_song object contains extracted content request, original JSON response object request path.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_song.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for a song — get_song","text":"","code":"if (FALSE) { get_song(song_id = 3039923) }"},{"path":"https://ewenme.github.io/geniusr/reference/get_song_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve metadata for a song — get_song_df","title":"Retrieve metadata for a song — get_song_df","text":"Genius API lets search meta data song, given song ID. get_song_meta returns data tidy, reduced, format.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_song_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve metadata for a song — get_song_df","text":"","code":"get_song_df(song_id, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/get_song_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve metadata for a song — get_song_df","text":"song_id ID song (song_id within object returned search_song) access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/get_song_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve metadata for a song — get_song_df","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/get_song_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve metadata for a song — get_song_df","text":"","code":"if (FALSE) { get_song_df(song_id = 3039923) }"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_album.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_album objects — print.genius_album","title":"Slightly more human-readable output for genius_album objects — print.genius_album","text":"Slightly human-readable output genius_album objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_album.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_album objects — print.genius_album","text":"","code":"# S3 method for genius_album print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_album.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_album objects — print.genius_album","text":"x genius_album object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_annotation objects — print.genius_annotation","title":"Slightly more human-readable output for genius_annotation objects — print.genius_annotation","text":"Slightly human-readable output genius_annotation objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_annotation objects — print.genius_annotation","text":"","code":"# S3 method for genius_annotation print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_annotation objects — print.genius_annotation","text":"x genius_annotation object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_artist.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_artist objects — print.genius_artist","title":"Slightly more human-readable output for genius_artist objects — print.genius_artist","text":"Slightly human-readable output genius_artist objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_artist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_artist objects — print.genius_artist","text":"","code":"# S3 method for genius_artist print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_artist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_artist objects — print.genius_artist","text":"x genius_artist object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_referent.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_referent objects — print.genius_referent","title":"Slightly more human-readable output for genius_referent objects — print.genius_referent","text":"Slightly human-readable output genius_referent objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_referent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_referent objects — print.genius_referent","text":"","code":"# S3 method for genius_referent print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_referent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_referent objects — print.genius_referent","text":"x genius_referent object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_resource.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_resource objects — print.genius_resource","title":"Slightly more human-readable output for genius_resource objects — print.genius_resource","text":"Slightly human-readable output genius_resource objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_resource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_resource objects — print.genius_resource","text":"","code":"# S3 method for genius_resource print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_resource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_resource objects — print.genius_resource","text":"x genius_resource object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_song.html","id":null,"dir":"Reference","previous_headings":"","what":"Slightly more human-readable output for genius_song objects — print.genius_song","title":"Slightly more human-readable output for genius_song objects — print.genius_song","text":"Slightly human-readable output genius_song objects","code":""},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_song.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slightly more human-readable output for genius_song objects — print.genius_song","text":"","code":"# S3 method for genius_song print(x, ...)"},{"path":"https://ewenme.github.io/geniusr/reference/print.genius_song.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slightly more human-readable output for genius_song objects — print.genius_song","text":"x genius_song object ... ignored","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_artist.html","id":null,"dir":"Reference","previous_headings":"","what":"Search artists on Genius — search_artist","title":"Search artists on Genius — search_artist","text":"Genius API lets search hosted content (songs). Use search_artist() return artist_id, artist_name artist_url unique artist matches found using search term.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_artist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search artists on Genius — search_artist","text":"","code":"search_artist(search_term, n_results = 10, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/search_artist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search artists on Genius — search_artist","text":"search_term character string search n_results Maximum . search results return access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_artist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search artists on Genius — search_artist","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/search_artist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search artists on Genius — search_artist","text":"","code":"if (FALSE) { search_artist(search_term = \"Lil\", n_results = 20) }"},{"path":"https://ewenme.github.io/geniusr/reference/search_genius.html","id":null,"dir":"Reference","previous_headings":"","what":"Search documents hosted on Genius — search_genius","title":"Search documents hosted on Genius — search_genius","text":"Genius API lets search hosted content (songs). Use search_genius() return hits given search term, full.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_genius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search documents hosted on Genius — search_genius","text":"","code":"search_genius(search_term, n_results = 10, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/search_genius.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search documents hosted on Genius — search_genius","text":"search_term character string search n_results Maximum . search results return access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_genius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search documents hosted on Genius — search_genius","text":"genius_resource object contains extracted content request, original JSON response object request path.","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/search_genius.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search documents hosted on Genius — search_genius","text":"","code":"if (FALSE) { search_genius(search_term = \"Lil\", n_results = 100) }"},{"path":"https://ewenme.github.io/geniusr/reference/search_song.html","id":null,"dir":"Reference","previous_headings":"","what":"Search songs on Genius — search_song","title":"Search songs on Genius — search_song","text":"Genius API lets search hosted content (songs). Use search_song() return song_id, song_name, lyrics_url artist_id unique song matches found using search term.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_song.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search songs on Genius — search_song","text":"","code":"search_song(search_term, n_results = 10, access_token = genius_token())"},{"path":"https://ewenme.github.io/geniusr/reference/search_song.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search songs on Genius — search_song","text":"search_term character string search n_results Maximum . search results return access_token Genius' client access token, defaults genius_token","code":""},{"path":"https://ewenme.github.io/geniusr/reference/search_song.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search songs on Genius — search_song","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/search_song.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search songs on Genius — search_song","text":"","code":"if (FALSE) { search_song(search_term = \"Gucci\", n_results = 50) }"},{"path":"https://ewenme.github.io/geniusr/reference/song_to_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert genius_song object to a data frame — song_to_df","title":"Convert genius_song object to a data frame — song_to_df","text":"Convert genius_song object data frame","code":""},{"path":"https://ewenme.github.io/geniusr/reference/song_to_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert genius_song object to a data frame — song_to_df","text":"","code":"song_to_df(x)"},{"path":"https://ewenme.github.io/geniusr/reference/song_to_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert genius_song object to a data frame — song_to_df","text":"x genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/song_to_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert genius_song object to a data frame — song_to_df","text":"tibble","code":""},{"path":"https://ewenme.github.io/geniusr/reference/song_to_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert genius_song object to a data frame — song_to_df","text":"","code":"if (FALSE) { song <- get_song(song_id = 3039923) song_to_df(song) }"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_album_performances.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract album performances from a Genius album — tidy_album_performances","title":"Extract album performances from a Genius album — tidy_album_performances","text":"Extract \"album performances\" (.e. album credits) info Genius album object, tidy tibble.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_album_performances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract album performances from a Genius album — tidy_album_performances","text":"","code":"tidy_album_performances(x)"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_album_performances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract album performances from a Genius album — tidy_album_performances","text":"x genius_album object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_album_performances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract album performances from a Genius album — tidy_album_performances","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/tidy_album_performances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract album performances from a Genius album — tidy_album_performances","text":"","code":"if (FALSE) { album <- get_album(album_id = 337082)  tidy_album_performances(album) }"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_performances.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract custom performances from a Genius song — tidy_song_performances","title":"Extract custom performances from a Genius song — tidy_song_performances","text":"Extract \"custom performances\" (.e. song credits) info Genius song object, tidy tibble.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_performances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract custom performances from a Genius song — tidy_song_performances","text":"","code":"tidy_song_performances(x)"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_performances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract custom performances from a Genius song — tidy_song_performances","text":"x genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_performances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract custom performances from a Genius song — tidy_song_performances","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_performances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract custom performances from a Genius song — tidy_song_performances","text":"","code":"if (FALSE) { song <- get_song(song_id = 3039923)  tidy_song_performances(song) }"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_producers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract producer credits from a Genius song — tidy_song_producers","title":"Extract producer credits from a Genius song — tidy_song_producers","text":"Extract \"producer artists\" (.e. producer credits) info Genius song object, tidy tibble.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_producers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract producer credits from a Genius song — tidy_song_producers","text":"","code":"tidy_song_producers(x)"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_producers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract producer credits from a Genius song — tidy_song_producers","text":"x genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_producers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract producer credits from a Genius song — tidy_song_producers","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_producers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract producer credits from a Genius song — tidy_song_producers","text":"","code":"if (FALSE) { song <- get_song(song_id = 3039923)  tidy_song_producers(song) }"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_relationships.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract song relationships from a Genius song — tidy_song_relationships","title":"Extract song relationships from a Genius song — tidy_song_relationships","text":"Extract \"song relationships\" info Genius song object, tidy tibble.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_relationships.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract song relationships from a Genius song — tidy_song_relationships","text":"","code":"tidy_song_relationships(x)"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_relationships.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract song relationships from a Genius song — tidy_song_relationships","text":"x genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_relationships.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract song relationships from a Genius song — tidy_song_relationships","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_relationships.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract song relationships from a Genius song — tidy_song_relationships","text":"","code":"if (FALSE) { song <- get_song(song_id = 3039923)  tidy_song_relationships(song) }"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_writers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract writer credits from a Genius song — tidy_song_writers","title":"Extract writer credits from a Genius song — tidy_song_writers","text":"Extract \"writer artists\" (.e. writer credits) info Genius song object, tidy tibble.","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_writers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract writer credits from a Genius song — tidy_song_writers","text":"","code":"tidy_song_writers(x)"},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_writers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract writer credits from a Genius song — tidy_song_writers","text":"x genius_song object","code":""},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_writers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract writer credits from a Genius song — tidy_song_writers","text":"tibble","code":""},{"path":[]},{"path":"https://ewenme.github.io/geniusr/reference/tidy_song_writers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract writer credits from a Genius song — tidy_song_writers","text":"","code":"if (FALSE) { song <- get_song(song_id = 3039923)  tidy_song_writers(song) }"},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"geniusr-121","dir":"Changelog","previous_headings":"","what":"geniusr 1.2.1","title":"geniusr 1.2.1","text":"apply new HTML5 fixes CRAN remove previously deprecated functions (get_album|artist|song_meta(), get_artist_songs(), scrape_lyrics_id|url(), scrape_tracklist())","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"geniusr-120","dir":"Changelog","previous_headings":"","what":"geniusr 1.2.0","title":"geniusr 1.2.0","text":"CRAN release: 2020-04-13","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"breaking-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Breaking changes","title":"geniusr 1.2.0","text":"get_album|artist|song_df() new name function previously known get_album|artist|song_meta() get_artist_songs_df() new name function previously known get_artist_songs(). get_artist_songs() now returns nested list object, additional fields present tidy sister version (get_artist_songs_df()) get_lyrics_id|url() new name function previously known scrape_lyrics_id|url() get_album_tracklist_id() new name function previously known scrape_tracklist()","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"new-functions-1-2-0","dir":"Changelog","previous_headings":"","what":"New functions","title":"geniusr 1.2.0","text":"get_album|artist|song() returns nested list object, additional fields present tidy sister version (get_album|artist|song_df()) get_album_tracklist_search() supports retrieval album tracklists using artist_name album_name. get_lyrics_search() supports retrieval lyrics using artist_name song_title. search_genius() supports generic search hosted content Genius tidy_song_xxx() tidy_album_xxx() functions support extraction deeply-nested elements, genius_song genius_album objects respectively, tidy tibble format. album|artist|song_to_df() simplify genius_album|artist|song objects respectively, returning tidy tibbles. browse_genius() browse_genius_resource() support easy navigation Genius URLs R.","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"minor-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"geniusr 1.2.0","text":"comment_count field added get_album_df() output artist_twitter_name added get_artist_df() output sort argument added get_artist_songs() get_artist_songs_df(), order results “title” (default) “popularity” remove attempt package dependency","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"geniusr-110","dir":"Changelog","previous_headings":"","what":"geniusr 1.1.0","title":"geniusr 1.1.0","text":"CRAN release: 2019-01-20 Correct license added. Fixed bug occurring get_song_meta functions handle missing song fields (#6). Fixed bug scrape_lyrics_ functions handle instrumental songs (#8).","code":""},{"path":"https://ewenme.github.io/geniusr/news/index.html","id":"geniusr-100","dir":"Changelog","previous_headings":"","what":"geniusr 1.0.0","title":"geniusr 1.0.0","text":"CRAN release: 2017-12-06 CRAN release Added NEWS.md file track changes package.","code":""}]
